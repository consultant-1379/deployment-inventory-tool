version: '2.1'
services:
  nginx:
    build: docker/nginx
    ports:
      - "80:80"
    depends_on:
      nodejs:
        condition: service_healthy
      nodejs2:
        condition: service_healthy
      swagger:
        condition: service_healthy
      helpdocs:
        condition: service_healthy
    volumes:
      - ./docker/nginx/development.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD-SHELL","curl --fail http://localhost || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  nodejs:
    build: .
    ports:
     - "8887:8888"
    environment:
     - DB_1_PORT_27017_TCP_ADDR=mongodb
     - LDAP_URL=${LDAP_URL}
     - SEARCH_FILTER=${SEARCH_FILTER}
     - BASE_DN_LIST=${BASE_DN_LIST}
     - PARAMETER_DEFAULTS_APPLICATION=${PARAMETER_DEFAULTS_APPLICATION}
     - JIRA_HOST=${JIRA_HOST}
     - JIRA_USERNAME=${JIRA_USERNAME}
     - JIRA_PASSWORD=${JIRA_PASSWORD}
     - UPGRADE_TOOL_URL=${UPGRADE_TOOL_URL}
     - DIT_EMAIL_ADDRESS=${DIT_EMAIL_ADDRESS}
     - DTT_EMAIL_ADDRESS=${DTT_EMAIL_ADDRESS}
     - DTT_EMAIL_PASSWORD=${DTT_EMAIL_PASSWORD}
     - TEAM_EMAIL=${TEAM_EMAIL}
     - IPV4REGEX=${IPV4REGEX}
     - IPV6REGEX=${IPV6REGEX}
    depends_on:
      mongodb:
        condition: service_healthy
      ldap:
        condition: service_healthy
    volumes:
     - ./:/opt/mean.js
     - nodejs_node_modules:/opt/mean.js/node_modules
     - nodejs_public:/opt/mean.js/public
    healthcheck:
      test: [ "CMD-SHELL","curl --fail http://localhost:80 || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 5
  nodejs2:
    build: .
    ports:
     - "8889:8888"
    environment:
     - DB_1_PORT_27017_TCP_ADDR=mongodb
     - LDAP_URL=${LDAP_URL}
     - SEARCH_FILTER=${SEARCH_FILTER}
     - BASE_DN_LIST=${BASE_DN_LIST}
     - PARAMETER_DEFAULTS_APPLICATION=${PARAMETER_DEFAULTS_APPLICATION}
     - JIRA_HOST=${JIRA_HOST}
     - JIRA_USERNAME=${JIRA_USERNAME}
     - JIRA_PASSWORD=${JIRA_PASSWORD}
     - UPGRADE_TOOL_URL=${UPGRADE_TOOL_URL}
     - DIT_EMAIL_ADDRESS=${DIT_EMAIL_ADDRESS}
     - DTT_EMAIL_ADDRESS=${DTT_EMAIL_ADDRESS}
     - DTT_EMAIL_PASSWORD=${DTT_EMAIL_PASSWORD}
     - TEAM_EMAIL=${TEAM_EMAIL}
     - IPV4REGEX=${IPV4REGEX}
     - IPV6REGEX=${IPV6REGEX}
    depends_on:
      mongodb:
        condition: service_healthy
      ldap:
        condition: service_healthy
    volumes:
     - ./:/opt/mean.js
     - nodejs_node_modulesclone:/opt/mean.js/node_modules
     - nodejs_publicclone:/opt/mean.js/public
    healthcheck:
      test: [ "CMD-SHELL","curl --fail http://localhost:80 || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 5
  mongodb:
    image: armdocker.seli.gic.ericsson.se/dockerhub-ericsson-remote/mongo:4.0.14
    ports:
     - '27018:27017'
    volumes:
     - mongodb_data:/data/db
     - mongodb_logs:/var/log/mongodb
    healthcheck:
      test: [ "CMD-SHELL", "mongo --quiet localhost/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'" ]
      interval: 15s
      timeout: 5s
      retries: 5
  swagger:
    build:
      context: .
      dockerfile: docker/swagger/Dockerfile
    environment:
     - API_URL=/apidocs/swagger.json
    healthcheck:
      test: [ "CMD-SHELL","whoami || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 5
  helpdocs:
    build:
      context: .
      dockerfile: docker/helpdocs/Dockerfile
    volumes:
      - ./helpdocs/help/en-us/helpdocs:/opt/helpdocs/help/en-us/helpdocs
    healthcheck:
      test: [ "CMD-SHELL","whoami || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 5
  ldap:
    image: armdocker.seli.gic.ericsson.se/dockerhub-ericsson-remote/osixia/openldap:1.2.2
    healthcheck:
      test: [ "CMD-SHELL","whoami || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 5
volumes:
  nodejs_node_modules:
  nodejs_public:
  nodejs_node_modulesclone:
  nodejs_publicclone:
  mongodb_data:
  mongodb_logs:

{
  "paths": {
    "/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Returns a list of Labels that match the provided query parameters.",
        "description": "Returns a list of all Labels and their key-values when no filter parameters are provided. \nFor filtering syntax see <a href='/helpdocs/#help/app/helpdocs/topic/features/apiSearchandFilter' target='_blank'><b>here</b></a>.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name":"q",
            "in":"query",
            "description":"Specifies what Labels should be retrieved based on provided key-values. \nMultiple key-values can be specified with the ampersand-delimited format. Eg. To list all Labels with the name 'mylabel': 'q=name=mylabel'",
            "required":false,
            "allowReserved": true,
            "type":"string",
            "example": "name=mylabel"
          },
          {
            "name":"fields",
            "in":"query",
            "description":"Specifies what key-values associated with the retrieved Labels that you want to receive. \nMultiple key-values can be retrieved through filtering keys with the comma-delimited format. Eg. For the name value alone: 'fields=name'",
            "required":false,
            "allowReserved": true,
            "type":"string",
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            }
          },
          "422": {
            "description": "Improperly structured query. Make sure to use ?q=&lt;key&gt;=&lt;value&gt; syntax"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post":{
        "tags": [
          "Labels"
        ],
        "summary": "Creates a new Label.",
        "description": "Creates and returns a new Label.",
        "produces": [
          "application/json"
        ],
        "consume": [
          "application/json"
        ],
        "parameters":[
          {
            "in": "body",
            "name": "body",
            "description": "Label object that represents your Label",
            "required": true,
            "schema":{
              "$ref": "#/definitions/Label"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Label successfully."
          },
          "400": {
            "description": "Possible messages:\n* Path 'name' is required\n*Error, provided name is not unique.\n* Path 'name' {PATH} is shorter than the minimum allowed length (2).\n*Path `name` {PATH} is longer than the maximum allowed length (50).\n*Field `rogueKey` is not in schema and strict mode is set to throw.\n*There was a syntax error found in your request, please make sure that it is valid and try again"
          },
          "422": {
            "description": "Cannot create the Label, the category 'invalid_category' is invalid. \n*Please provide one of the following valid categories: size, site or other and try again"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/labels/{labelId}":{
      "get":{
        "tags": [
          "Labels"
        ],
        "summary": "Returns a Label.",
        "description": "Returns a Label. \nFor filtering syntax see <a href='/helpdocs/#help/app/helpdocs/topic/features/apiSearchandFilter' target='_blank'><b>here</b></a>.",
        "produces": [
          "application/json"
        ],
        "parameters":[
           {
              "name":"labelId",
              "in":"path",
              "required":true,
              "description":"The id of the Label to retrieve",
              "type":"string"
           }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Label",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "404":{
            "description":"A Label with that id does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put":{
        "tags": [
          "Labels"
        ],
        "summary": "Updates a Label.",
        "description": "Updates a Label.",
        "produces": [
          "application/json"
        ],
        "consume": [
          "application/json"
        ],
        "parameters":[
           {
              "name":"labelId",
              "in":"path",
              "required":true,
              "description":"The id of the Label to update",
              "type":"string"
           },
           {
             "in": "body",
             "name": "body",
             "description": "Label object that represents your OpenStack Label<br>Partial update possible, not all fields in body required",
             "required": true,
             "schema":{
               "$ref": "#/definitions/Label"
              }
            }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Label",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "400": {
             "description": "Possible messages:\n* Path 'name' is required\n*Error, provided name is not unique.\n* Path 'name' {PATH} is shorter than the minimum allowed length (2).\n*Path `name` {PATH} is longer than the maximum allowed length (50).\n*Field `rogueKey` is not in schema and strict mode is set to throw.\n*There was a syntax error found in your request, please make sure that it is valid and try again"
          },
          "404":{
            "description":"A Label with that id does not exist"
          },
          "422": {
             "description": "Cannot update the Label, the category 'invalid_category' is invalid. \n*Please provide one of the following valid categories: size, site or other and try again"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete":{
        "tags": [
          "Labels"
        ],
        "summary": "Deletes a Label.",
        "description": "Deletes a Label.",
        "produces": [
          "application/json"
        ],
        "parameters":[
           {
              "name":"labelId",
              "in":"path",
              "required":true,
              "description":"The id of the Label to delete",
              "type":"string"
           }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted Label",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "404":{
            "description": "A Label with that id does not exist"
          },
          "422":{
            "description": "Can't delete Label, it has dependent projects"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
